# Приведенная выше программа имеет ряд недочетов и недоработок.Требуется исправить и доработать, согласно следующему
# плану.

# При вычислении оклеиваемой поверхности мы не "портим" поле self.square. В нем так и остается полная площадь стен.Ведь
# она может понадобиться, если состав списка wd изменится, и придется заново вычислять оклеиваемую площадь.

# Однако в классе не предусмотрено сохранение длин сторон, хотя они тоже могут понадобиться.Например, если потребуется
# изменить одну из величин у уже существующего объекта. Площадь же помещения всегда можно вычислить, если хранить
# исходные параметры.Поэтому сохранять саму площадь в поле не обязательно.

# Исправьте код так, чтобы у объектов Room были только четыре поля – width, lenght, height и wd. Площади(полная и
# оклеиваемая) должны вычислять лишь при необходимости путем вызова методов.

# Программа вычисляет площадь под оклейку, но ничего не говорит о том, сколько потребуется рулонов обоев.Добавьте
# метод, который принимает в качестве аргументов длину и ширину одного рулона, а возвращает количество необходимых,
# исходя из оклеиваемой площади.

# Разработайте интерфейс программы. Пусть она запрашивает y пользователя данные и выдает ему площадь оклеиваемой
# поверхности и количество необходимых рулонов.

from math import ceil


class WinDoor:  # информация о площади дверей и окон
    def __init__(self, width, lenght):
        self.square = width * lenght


class Room:
    def __init__(self, width=float(input('Введите длину комнаты:')), lenght=float(input('Введите ширину комнаты:')), height=float(input('Введите высоту комнаты:'))):
        self.width = width
        self.lenght = lenght
        self.height = height
        self.wd = []

    def add_wd(self, w, h):  # площадь окон и дверей в списке
        self.wd.append(WinDoor(w, h))

    def work_surface(self):  # оклеиваемая поверхность и количество рулонов
        new_square = self.square
        for i in self.wd:
            new_square -= i.square
        self.roll = new_square / 10  # с учетом, что один рулон 10х1м (10м3)
        return f'Оклеиваемая площадь: {new_square} \nКоличество рулонов: {ceil(self.roll)}'

    def room_square(self):  # полная площадь
        self.square = 2 * self.height * (self.width + self.lenght)
        return f'Полная площадь: {self.square}'


r1 = Room()
print(r1.room_square())  
r1.add_wd(1, 1)
r1.add_wd(1, 1)
r1.add_wd(1, 2)
print(r1.work_surface())  
