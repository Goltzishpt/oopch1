# Разработайте программу по следующему описанию.
# В некой игре-стратегии есть солдаты и герои. У всех есть свойство, содержащее уникальный номер объекта, и свойство, в котором хранится принадлежность команде. 
# У солдат есть метод "иду за героем", который в качестве аргумента принимает объект типа "герой". У героев есть метод увеличения собственного уровня.
# В основной ветке программы создается по одному герою для каждой команды. В цикле генерируются объекты-солдаты. Их принадлежность команде определяется случайно. 
# Солдаты разных команд добавляются в разные списки.
# Измеряется длина списков солдат противоборствующих команд и выводится на экран. У героя, принадлежащего команде с более длинным списком, увеличивается уровень.
# Отправьте одного из солдат первого героя следовать за ним. Выведите на экран идентификационные номера этих двух юнитов.

# жизнь вносит свои коррективы, а я свои ПОТОМУ ЧТО Я НЕ ХОЧУ ВЫВОДИТЬ СКУЧНЫЙ АЙДИШНИК Я ХОЧУ ТИМУ


from random import choice


class Heroes:
    id = 1  # уникальное айди героя

    def __init__(self, team):
        self.id = Heroes.id  # уникальное айди героя
        Heroes.id += 1
        self.level = 0  # уровень героя
        self.team = team  # команда героя, выбор "свет" или "тьма"

    def level_up(self):  # повышение уровня героя
        self.level += 1
        print(f'Hero {self.team} has {self.level} level')


class Soldiers:
    id = 1

    def __init__(self):
        self.id = Soldiers.id  # уникальный айди солдата
        Soldiers.id += 1
        self.team = choice(['radiant', 'dire'])  # рандомный выбор команды

    def go_to_hero(self, Heroes):  # просто солдат идет за героем
        print(f'Soldier {Soldiers.id} go to hero {Heroes.id}')


hero1 = Heroes('radiant')  # герой 1, команда света
hero2 = Heroes('dire')  # герой 2, команда тьмы

for round in range(10):  # в игре 10 раундов
    soldiers_r = 0  # в начале раунда баллы по нулям
    soldiers_d = 0
    for choose in range(10):  # раунд начинается
        row = Soldiers()  # создаем солдата
        if row.team == 'radiant':  # если рандом выпал на свет +1 балл
            soldiers_r += 1
            row.go_to_hero(hero1)
        else:  # если тьма
            soldiers_d += 1
            row.go_to_hero(hero2)
    if soldiers_r > soldiers_d:  # подсчет баллов в конце раунда
        hero1.level_up()
    else:
        hero2.level_up()
    print('Round ended')
    print()

if hero1.level > hero2.level:  # итог игры
    print('Radiant is victory')
else:
    print('Dire is victory')
